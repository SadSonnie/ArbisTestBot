
//Функция ПроверитьДоступностьGet_ping(Запрос)
//		Ответ = Новый HTTPСервисОтвет(200);
//	Ответ.Заголовки.Вставить("Content-Type","text/html; charset=utf-8");
//	Попытка
//		Ответ.УстановитьТелоИзСтроки("Связь есть, продолжаем");
//	Исключение
//		Ответ.КодСостояния = 400;
//		Ответ.УстановитьТелоИзСтроки(ОписаниеОшибки());
//	КонецПопытки;
//	Возврат Ответ;
//КонецФункции


//Функция ПроверитьДоступностьtgsmth(Запрос)
//	
//	//ПакетСообщения = Запрос.ПолучитьТелоКакСтроку();
//	//Подписчик = ПакетСообщения.message.chat.id;
//	Ответ = Новый HTTPСервисОтвет(200);
//	Ответ.УстановитьТелоИзСтроки("Тест");
//	Возврат Ответ;
//КонецФункции

Функция messageПолучитьСообщениеТелеграм(Запрос)
	Ответ = Новый HTTPСервисОтвет(200);
	
	ПакетСообщения = Разобратьпакет(Запрос.ПолучитьТелоКакСтроку());
	Ответ.УстановитьТелоИзСтроки("POSTMethod is working " + ПакетСообщения.message.chat.id);
	ЧатИД = ПакетСообщения.message.chat.id;
	Если ПакетСообщения.message.text = "/start" Тогда
		ОтправитьСообщениеТГ(ЧатИД, "Хало, с помощью этого бота ты можешь:" + Символы.ПС + "/gif - Получить гифку"
		 + Символы.ПС + "/cur - Получить курс $"
		 + Символы.ПС + "/wthr - Получить прогноз погоды"
		 + Символы.ПС + "/crm - управление amoCrm");
	ИначеЕсли Константы.ГифЧек.Получить() = Истина Тогда
		ОтправитьГифТГ(ЧатИД, ПакетСообщения.message.text);
		Константы.ГифЧек.Установить(Ложь);
	ИначеЕсли Константы.ДобавитьЧек.Получить() = Истина Тогда
		Деление = СтрНайти(ПакетСообщения.message.text, "\");
		ТекстЗадачи = Лев(ПакетСообщения.message.text, Деление - 2);
		Дедлайн = Прав(ПакетСообщения.message.text, 10);
		ДобавитьЗадачуНаСервере(ЧатИД, ТекстЗадачи , Дедлайн);
		ОтправитьСообщениеТГ(ЧатИД, "Задача успешно добавлена!");
		Константы.СРМЧек.Установить(Ложь);
		Константы.ДобавитьЧек.Установить(Ложь);
		ИначеЕсли Константы.СРМЧек.Получить() = Истина И ПакетСообщения.message.text = "/show" Тогда
		ПолучитьЗадачиНаСервере(ЧатИД);
		Константы.СРМЧек.Установить(Ложь);
		ИначеЕсли Константы.СРМЧек.Получить() = Истина И ПакетСообщения.message.text = "/add" Тогда
		СпроситьЗадачу(ЧатИД);
		Константы.ДобавитьЧек.Установить(Истина);
		Константы.СРМЧек.Установить(Ложь);
	ИначеЕсли ПакетСообщения.message.text = "/gif" Тогда
		Гиф(ЧатИД);
		Константы.ГифЧек.Установить(Истина); 
	ИначеЕсли ПакетСообщения.message.text = "/cur" Тогда
		Кур(ЧатИД);
	ИначеЕсли ПакетСообщения.message.text = "/wthr" Тогда
		Везер(ЧатИД);
	ИначеЕсли ПакетСообщения.message.text = "/crm" Тогда
		Срм(ЧатИД);
		Константы.СРМЧек.Установить(Истина);
	КонецЕсли;
	Возврат Ответ;
	КонецФункции
	
	
Функция СпроситьЗадачу(ЧатИД)

	ОтправитьСообщениеТГ(ЧатИД, "Задайте задачу в формате: " + Символы.ПС + "<описание> \ <дедлайн>" + Символы.ПС + "Пример:" + Символы.ПС + "сказать Виталику что он классный \ 29.09.2021");
	
КонецФункции

	
	
Процедура ДобавитьЗадачуНаСервере(ЧатИД, ОписаниеЗадачи, Дедлайн)
	JSONЗапрос = Новый ЗаписьJSON;
	JSONЗапрос.УстановитьСтроку();
	ТелоМассив = Новый Массив(1);
	Данные = Новый Структура;
	Данные.Вставить("task_type_id", 1);
	Данные.Вставить("text", ОписаниеЗадачи);
	Данные.Вставить("complete_till", Число(Формат(Дата(Прав(Дедлайн, 4), Сред(Дедлайн,4,2), Сред(Дедлайн,0,2)) - дата(1970,1,1,1,0,0), "ЧГ=0")));
	ТелоМассив[0] = Данные;
	
	ЗаписатьJSON(JSONЗапрос, ТелоМассив);
    СтрокаJS = JSONЗапрос.Закрыть();
	ЗаголовокЗапросаHTTP = Новый Соответствие();
	ЗаголовокЗапросаHTTP.Вставить("Content-Type", "application/json");
	ЗаголовокЗапросаHTTP.Вставить("Authorization", "Bearer " + Константы.АксесТокен.Получить());
	ИнтернетПрокси = Новый ИнтернетПрокси(Ложь);
	ИнтернетПрокси.Установить("https","proxy" ,5558 ,"antufiev.d.o" ,"fL9c2WB7" , );
	//АдресРесурса = СтрСоединить(ПараметрыЗапроса, "&");
	АдресРесурса = "/api/v4/tasks"; 	
	Соединение = Новый HTTPСоединение("salamalecum.amocrm.ru", 443,,,ИнтернетПрокси,, Новый ЗащищенноеСоединениеOpenSSL() ); 
    Запрос = Новый HTTPЗапрос(АдресРесурса, ЗаголовокЗапросаHTTP);
    Запрос.УстановитьТелоИзСтроки(СтрокаJS);
	РезультатЗапроса = Соединение.ВызватьHTTPМетод("POST", Запрос); 
    ОкноОтвета = РезультатЗапроса.ПолучитьТелоКакСтроку();
КонецПроцедуры
	
	
Процедура ПолучитьЗадачиНаСервере(ЧатИД)
	JSONЗапрос = Новый ЗаписьJSON;
	JSONЗапрос.УстановитьСтроку();
	ИнтернетПрокси = Новый ИнтернетПрокси(Ложь);
	ИнтернетПрокси.Установить("https","proxy" ,5558 ,"antufiev.d.o" ,"fL9c2WB7" , );
	ЗаголовокЗапросаHTTP = Новый Соответствие();
	ЗаголовокЗапросаHTTP.Вставить("Content-Type", "application/json");
	ЗаголовокЗапросаHTTP.Вставить("Authorization", "Bearer " + Константы.АксесТокен.Получить());	
	АдресРесурса = "/api/v4/tasks"; 		 
	Соединение = Новый HTTPСоединение("salamalecum.amocrm.ru", 443,,,ИнтернетПрокси,, Новый ЗащищенноеСоединениеOpenSSL() ); 
    Запрос = Новый HTTPЗапрос(АдресРесурса, ЗаголовокЗапросаHTTP);
	РезультатЗапроса = Соединение.ВызватьHTTPМетод("GET", Запрос);
	Ответ = РезультатЗапроса.ПолучитьТелоКакСтроку();
	ПакетСообщения = Разобратьпакет(Ответ);
	КоличествоЗадач = ПакетСообщения._embedded.tasks.Количество();
	Счетчик = 0;
	ЗадачиОтвет = "";
	Пока Счетчик < КоличествоЗадач Цикл
	
		ЗадачиОтвет = ЗадачиОтвет + (Счетчик + 1) + ". " + ПакетСообщения._embedded.tasks[Счетчик].text + " до " + TimestampВДату(ПакетСообщения._embedded.tasks[Счетчик].complete_till) + Символы.ПС;
		Счетчик = Счетчик + 1;
		
	КонецЦикла;
    ОтправитьСообщениеТГ(ЧатИД, ЗадачиОтвет);
КонецПроцедуры

Функция TimestampВДату(пДатаТС)
 Попытка
 Возврат Дата("19700101")+?(ТипЗнч(пДатаТС) = Тип("Строка"), Число(пДатаТС), пДатаТС);
 Исключение
 Возврат Неопределено;
 КонецПопытки;
КонецФункции

Функция Гиф(ЧатИД)
	ОтправитьСообщениеТГ(ЧатИД, ("Ключевое слово:"));
КонецФункции

Функция Кур(ЧатИД)
	JSONЗапрос = Новый ЗаписьJSON;
	JSONЗапрос.УстановитьСтроку();
	ИнтернетПрокси = Новый ИнтернетПрокси(Ложь);
	ИнтернетПрокси.Установить("https","proxy" ,5558 ,"antufiev.d.o" ,"fL9c2WB7" , );
    СтрокаJS = JSONЗапрос.Закрыть();
	ЗаголовокЗапросаHTTP = Новый Соответствие();
	АдресРесурса = "/daily_json.js"; 	
	Соединение = Новый HTTPСоединение("www.cbr-xml-daily.ru", 443,,,ИнтернетПрокси,, Новый ЗащищенноеСоединениеOpenSSL() );
    Запрос = Новый HTTPЗапрос(АдресРесурса);
	РезультатЗапроса = Соединение.ВызватьHTTPМетод("GET", Запрос);
	Ответ = РезультатЗапроса.ПолучитьТелоКакСтроку();
	ПакетСообщения = Разобратьпакет(Ответ);
	ДатаНормальная = Дата(Лев(ПакетСообщения.Date, 4), Сред(ПакетСообщения.Date, 6, 2), Сред(ПакетСообщения.Date, 9, 2));
	ОтправитьСообщениеТГ(ЧатИД, "По состоянию на " + Формат(ДатаНормальная, "ДЛФ=ДД") + ":" + Символы.ПС
	 + "1 " + ПакетСообщения.Valute.GBP.CharCode + " = " + ПакетСообщения.Valute.GBP.Value + " RUB" + " (" + ((ПакетСообщения.Valute.GBP.Value) - (ПакетСообщения.Valute.GBP.Previous)) + ")" + Символы.ПС
	 + "1 " + ПакетСообщения.Valute.USD.CharCode + " = " + ПакетСообщения.Valute.USD.Value + " RUB" + " (" + ((ПакетСообщения.Valute.USD.Value) - (ПакетСообщения.Valute.USD.Previous)) + ")" + Символы.ПС
	 + "1 " + ПакетСообщения.Valute.EUR.CharCode + " = " + ПакетСообщения.Valute.EUR.Value + " RUB" + " (" + ((ПакетСообщения.Valute.EUR.Value) - (ПакетСообщения.Valute.EUR.Previous)) + ")" + Символы.ПС);
КонецФункции

Функция Везер(ЧатИД)
	JSONЗапрос = Новый ЗаписьJSON;
	JSONЗапрос.УстановитьСтроку();
	ИнтернетПрокси = Новый ИнтернетПрокси(Ложь);
	ИнтернетПрокси.Установить("https","proxy" ,5558 ,"antufiev.d.o" ,"fL9c2WB7" , );
    СтрокаJS = JSONЗапрос.Закрыть();
	ЗаголовокЗапросаHTTP = Новый Соответствие();
	АдресРесурса = "/data/2.5/weather?q=Arkhangelsk&appid=77df51578b034fb56115bf10256a6d0a&units=metric&lang=ru"; 	
	Соединение = Новый HTTPСоединение("api.openweathermap.org", 443,,,ИнтернетПрокси,, Новый ЗащищенноеСоединениеOpenSSL() );
    Запрос = Новый HTTPЗапрос(АдресРесурса);
	РезультатЗапроса = Соединение.ВызватьHTTPМетод("GET", Запрос);
	ПакетДжсон = РезультатЗапроса.ПолучитьТелоКакСтроку();
	ПакетДжсон = СтрЗаменить(ПакетДжсон, "1h", "h1");
	ПакетСообщения = Разобратьпакет(ПакетДжсон);
    ОтправитьСообщениеТГ(ЧатИД, "По состоянию на " + ТекущаяДатаСеанса() + " в Архангельске " + ПакетСообщения.main.temp +  "°C. Влажность: "  + ПакетСообщения.main.humidity + "%");
КонецФункции

Функция Срм(ЧатИД)
	ОтправитьСообщениеТГ(ЧатИД, ("Показать задачи: /show" + Символы.ПС + "Добавить задачу: /add"));
КонецФункции


Функция ОтправитьСообщениеТГ(ЧатИД, ТекстСообщения)

	JSONЗапрос = Новый ЗаписьJSON;
	JSONЗапрос.УстановитьСтроку();
	ИнтернетПрокси = Новый ИнтернетПрокси(Ложь);
	ИнтернетПрокси.Установить("https","proxy" ,5558 ,"antufiev.d.o" ,"fL9c2WB7" , );
    СтрокаJS = JSONЗапрос.Закрыть();
	ЗаголовокЗапросаHTTP = Новый Соответствие();
	АдресРесурса = "/bot" + Константы.TelegramBotToken.Получить() + "/sendMessage?chat_id=" +XMLСтрока(ЧатИД) + "&text=" + ТекстСообщения; 	
	Соединение = Новый HTTPСоединение("api.telegram.org", 443,,,ИнтернетПрокси,, Новый ЗащищенноеСоединениеOpenSSL() );
    Запрос = Новый HTTPЗапрос(АдресРесурса);
	РезультатЗапроса = Соединение.ВызватьHTTPМетод("POST", Запрос);

КонецФункции

Функция ОтправитьГифТГ (ЧатИД, КлючевоеСлово)
	JSONЗапрос = Новый ЗаписьJSON;
	JSONЗапрос.УстановитьСтроку();
	ИнтернетПрокси = Новый ИнтернетПрокси(Ложь);
	ИнтернетПрокси.Установить("https","proxy" ,5558 ,"antufiev.d.o" ,"fL9c2WB7" , );
    СтрокаJS = JSONЗапрос.Закрыть();
	ЗаголовокЗапросаHTTP = Новый Соответствие();
	АдресРесурса = "/v1/gifs/random?api_key=" + Константы.ГифиТокен.Получить() +"&tag=" + КлючевоеСлово; 	
	Соединение = Новый HTTPСоединение("api.giphy.com", 443,,,ИнтернетПрокси,, Новый ЗащищенноеСоединениеOpenSSL() );
    Запрос = Новый HTTPЗапрос(АдресРесурса);
	РезультатЗапроса = Соединение.ВызватьHTTPМетод("GET", Запрос);
	СтрокаСОшибкой = РезультатЗапроса.ПолучитьТелоКакСтроку();
	СтрокаБезОшибки = СтрЗаменить(СтрокаСОшибкой, "480w_still","still_480w");
	ПакетСообщения = Разобратьпакет(СтрокаБезОшибки);
	


//	ОтветСтрокой =РезультатЗапроса.ПолучитьТелоКакСтроку();
//    НачальнаяПозиция = СтрНайти(ОтветСтрокой, """downsized_large""", НаправлениеПоиска.СНачала);
//    ОбрезалиВсеСлева = Прав(ОтветСтрокой, СтрДлина(ОтветСтрокой) - НачальнаяПозиция - 17);
//    КонечнаяПозиция = СтрНайти(ОбрезалиВсеСлева, """width""", НаправлениеПоиска.СНачала);
//    ОбрезалиВсеСправа = Лев(ОбрезалиВсеСлева, КонечнаяПозиция);
//    НачальнаяПозиция = СтрНайти(ОбрезалиВсеСправа, "url");
//    ОбрезалиВсеСлева = Прав(ОбрезалиВсеСправа, 139);
//    КонечнаяПозиция = СтрНайти(ОбрезалиВсеСлева, """");
//    ОбрезалиКавычку = Лев(ОбрезалиВсеСлева, 136);
//    ГотоваяСтрока = СтрЗаменить(ОбрезалиКавычку, "\/", "/");
//    gif = ГотоваяСтрока;

    JSONЗапрос = Новый ЗаписьJSON;
	JSONЗапрос.УстановитьСтроку();
	ИнтернетПрокси = Новый ИнтернетПрокси(Ложь);
	ИнтернетПрокси.Установить("https","proxy" ,5558 ,"antufiev.d.o" ,"fL9c2WB7" , );
    СтрокаJS = JSONЗапрос.Закрыть();
	ЗаголовокЗапросаHTTP = Новый Соответствие();
	АдресРесурса = "/bot" + Константы.TelegramBotToken.Получить() + "/sendDocument?chat_id=" +XMLСтрока(ЧатИД) + "&document=" + ПакетСообщения.data.images.downsized_large.url; 	
	Соединение = Новый HTTPСоединение("api.telegram.org", 443,,,ИнтернетПрокси,, Новый ЗащищенноеСоединениеOpenSSL() );
    Запрос = Новый HTTPЗапрос(АдресРесурса);
	РезультатЗапроса = Соединение.ВызватьHTTPМетод("POST", Запрос);
КонецФункции

	

Функция Разобратьпакет(СтрокаJSON) 
	Попытка
		Чтение = Новый ЧтениеJSON;
		Чтение.УстановитьСтроку(СтрокаJSON);
		Данные = ПрочитатьJSON(Чтение, Ложь,,,,,,, 10000);
		Чтение.Закрыть();	
		Возврат Данные;
	Исключение
		ОписаниеОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
	КонецПопытки
КонецФункции



//Функция ЗаписатьJS(СтруктураJS)
//	
//	ЗаписьJSON = Новый ЗаписьJSON;
//	ЗаписьJSON.УстановитьСтроку();
//	ЗаписатьJSON(ЗаписьJSON,СтруктураJS);
//	Возврат ЗаписьJSON.Закрыть();	

//КонецФункции




Функция msgGetMethod(Запрос)
	Ответ = Новый HTTPСервисОтвет(200);
	Возврат Ответ;
КонецФункции

Функция msgPostMethod(Запрос)
	Ответ = Новый HTTPСервисОтвет(200);
	Возврат Ответ;
КонецФункции

Функция messageGetMethod(Запрос)
	Ответ = Новый HTTPСервисОтвет(200);
	Ответ.УстановитьТелоИзСтроки("GetMethod is working");
	Возврат Ответ;
КонецФункции
