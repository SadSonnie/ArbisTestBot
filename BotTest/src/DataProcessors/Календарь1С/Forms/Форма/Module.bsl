
&НаКлиенте
Процедура Мэджик(Команда)
	МэджикНаСервере();
КонецПроцедуры

&НаСервере
Процедура МэджикНаСервере()
	АксесТокен = Константы.АксесТокен.Получить();
	КлиентИД = Константы.КлиентИД.Получить();
	РефрешТокен = Константы.РефрешТокен.Получить();
	КлиентСекрет = Константы.СекретКлюч.Получить();
	Сообщить(Константы.СекретКлюч.Получить());
	HttpsЗапрос();
КонецПроцедуры


&НаСервере
Процедура HttpsЗапрос()
 
   
	ПараметрыЗапроса = Новый Массив;
	ПараметрыЗапроса.Добавить("client_id=" + Константы.КлиентИД.Получить());
    ПараметрыЗапроса.Добавить("response_type=code");
    ПараметрыЗапроса.Добавить(СтрШаблон("scope=%1", КодироватьСтроку("https://www.googleapis.com/auth/calendar", СпособКодированияСтроки.КодировкаURL)));
    ПараметрыЗапроса.Добавить(СтрШаблон("redirect_uri=%1", КодироватьСтроку("http://localhost:8080", СпособКодированияСтроки.КодировкаURL)));
	
	АдресРесурса = СтрСоединить(ПараметрыЗапроса, "&");
	АдресРесурса = "/o/oauth2/v2/auth/identifier?" + АдресРесурса; 	
	 
	Соединение = Новый HTTPСоединение("accounts.google.com", 443,,,,, Новый ЗащищенноеСоединениеOpenSSL() );
	
    
    Запрос = Новый HTTPЗапрос(АдресРесурса);
    
    РезультатЗапроса = Соединение.Получить(Запрос); 
    
    Если РезультатЗапроса.КодСостояния = 200 Тогда
    	ОкноОтвета = РезультатЗапроса.ПолучитьТелоКакСтроку();
    	Возврат;  	
    КонецЕсли;
    
    РазобранноеURI = СтруктураURI(РезультатЗапроса.Заголовки.Получить("Location"));
   	Хост = РазобранноеURI.Хост;
   	Путь = РазобранноеURI.ПутьНаСервере;
    
    Соединение = Новый HTTPСоединение(Хост, 443,,,,, Новый ЗащищенноеСоединениеOpenSSL() );
    АдресРесурса = "/" + Путь;
    Запрос = Новый HTTPЗапрос(АдресРесурса);
    РезультатЗапроса = Соединение.Получить(Запрос); 
    ОкноОтвета = РезультатЗапроса.ПолучитьТелоКакСтроку();
КонецПроцедуры




Функция СтруктураURI(Знач СтрокаURI) Экспорт
 
  СтрокаURI = СокрЛП(СтрокаURI);
 
  // схема
  Схема = "";
  Позиция = Найти(СтрокаURI, "://");
  Если Позиция > 0 Тогда
    Схема = НРег(Лев(СтрокаURI, Позиция - 1));
    СтрокаURI = Сред(СтрокаURI, Позиция + 3);
  КонецЕсли;

  // строка соединения и путь на сервере
  СтрокаСоединения = СтрокаURI;
  ПутьНаСервере = "";
  Позиция = Найти(СтрокаСоединения, "/");
  Если Позиция > 0 Тогда
    ПутьНаСервере = Сред(СтрокаСоединения, Позиция + 1);
    СтрокаСоединения = Лев(СтрокаСоединения, Позиция - 1);
  КонецЕсли;
   
  // информация пользователя и имя сервера
  СтрокаАвторизации = "";
  ИмяСервера = СтрокаСоединения;
  Позиция = Найти(СтрокаСоединения, "@");
  Если Позиция > 0 Тогда
    СтрокаАвторизации = Лев(СтрокаСоединения, Позиция - 1);
    ИмяСервера = Сред(СтрокаСоединения, Позиция + 1);
  КонецЕсли;
 
  // логин и пароль
  Логин = СтрокаАвторизации;
  Пароль = "";
  Позиция = Найти(СтрокаАвторизации, ":");
  Если Позиция > 0 Тогда
    Логин = Лев(СтрокаАвторизации, Позиция - 1);
    Пароль = Сред(СтрокаАвторизации, Позиция + 1);
  КонецЕсли;
 
  // хост и порт
  Хост = ИмяСервера;
  Порт = "";
  Позиция = Найти(ИмяСервера, ":");
  Если Позиция > 0 Тогда
    Хост = Лев(ИмяСервера, Позиция - 1);
    Порт = Сред(ИмяСервера, Позиция + 1);
  КонецЕсли;
 
  Результат = Новый Структура;
  Результат.Вставить("Схема", Схема);
  Результат.Вставить("Логин", Логин);
  Результат.Вставить("Пароль", Пароль);
  Результат.Вставить("ИмяСервера", ИмяСервера);
  Результат.Вставить("Хост", Хост);
  Результат.Вставить("Порт", ?(Порт <> "", Число(Порт), Неопределено));
  Результат.Вставить("ПутьНаСервере", ПутьНаСервере);
 
  Возврат Результат;
 
КонецФункции
    

